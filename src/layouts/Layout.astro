---
export interface Props {
  title: string;
  lang?: string;
  alt?: string;
  currentBook?: string;
  currentChapter?: string;
}

const { title, lang = 'zh-CN', alt = '', currentBook = 'theory', currentChapter = '' } = Astro.props;
const isEn = lang === 'en' || (typeof window !== 'undefined' && window.location.pathname.startsWith('/en/'));
---

<!doctype html>
<html lang="zh-CN">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="美股投资实操手册 - 完整知识体系" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <div class="container">
      <!-- 顶部导航栏 -->
      <header class="top-nav" id="topNav">
        <div class="nav-left">
          <button class="sidebar-toggle" id="sidebarToggle" aria-label="切换侧边栏">📚</button>
        </div>
        <div class="nav-right">
          <button id="homeBtn" class="nav-control-btn home-btn" title="返回首页">🏠</button>
          <button id="tocBtn" class="nav-control-btn toc-btn" title="返回目录">📚</button>
          <button id="prevPageBtn" class="page-nav-btn" title="上一页">上一页</button>
          <button id="nextPageBtn" class="page-nav-btn" title="下一页">下一页</button>
          <button id="toggleReadingMode" class="reading-btn" title="专注阅读模式">📖</button>
          <button class="theme-toggle" id="themeToggle" aria-label="切换主题">
            <span class="theme-icon">🌙</span>
          </button>
          <button id="decreaseFont" class="font-btn" title="缩小字体">A-</button>
          <button id="increaseFont" class="font-btn" title="放大字体">A+</button>
          <a class="lang-btn" id="langSwitchEn" href={alt} title="English">EN</a>
          <a class="lang-btn" id="langSwitchCn" href={alt} title="中文">CN</a>
        </div>
      </header>

      <!-- 阅读进度条（专注模式显示） -->
      <div class="reading-progress" id="readingProgress" style="display: none;">
        <div class="reading-progress-bar" id="readingProgressBar"></div>
      </div>
      
      <!-- 侧边栏 -->
      <aside class="sidebar" id="sidebar">
        <div class="sidebar-header">
          <h2 id="sidebarTitle">📈 美股投资实操手册</h2>
        </div>
        
        <nav class="sidebar-nav" id="sidebarNav">
          <!-- 动态生成导航内容 -->
        </nav>
      </aside>

      <!-- 主内容区 -->
      <main class="main-content" id="mainContent">
        <slot />
      </main>



      <!-- 章节导航（仅book1章节页面显示） -->
      <div class="chapter-nav" id="chapterNav" style="display: none;">
        <button class="chapter-btn prev-chapter" id="prevChapter" disabled>
          <span class="chapter-icon">←</span>
          <span class="chapter-text">上一章</span>
        </button>
        <button class="chapter-btn next-chapter" id="nextChapter">
          <span class="chapter-text">下一章</span>
          <span class="chapter-icon">→</span>
        </button>
      </div>

      <!-- 回到顶部按钮 -->
      <button id="backToTop" class="back-to-top" aria-label="回到顶部" style="display: none;">↑</button>
    </div>

    <style is:global>
      @import '../styles/style.css';
      @import '../styles/components.css';

      /* 容器 */
      .container {
        position: relative;
        min-height: 100vh;
      }

      /* 顶部导航栏 */
      .top-nav {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0 16px;
        height: 48px;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        background: var(--bg-primary);
        border-bottom: 1px solid var(--border-color);
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        z-index: 1100;
        transition: all 0.3s ease;
      }

      .nav-left, .nav-right {
        display: flex;
        align-items: center;
        gap: 12px;
      }

      /* 按钮基础样式 */
      .sidebar-toggle,
      .reading-btn,
      .theme-toggle,
      .font-btn {
        width: 40px;
        height: 40px;
        font-size: 16px;
      }

      .sidebar-toggle:hover,
      .reading-btn:hover,
      .theme-toggle:hover,
      .font-btn:hover {
        background: linear-gradient(135deg, var(--primary-dark), var(--primary-color));
        transform: scale(1.05);
        box-shadow: 0 6px 20px rgba(0,0,0,0.25);
      }

      .sidebar-toggle:active,
      .reading-btn:active,
      .theme-toggle:active,
      .font-btn:active {
        transform: scale(0.95);
      }

      /* 翻页按钮样式 */
      .page-nav-btn {
        padding: 6px 10px;
        font-size: 12px;
        min-width: 50px;
        height: 40px;
      }

      .page-nav-btn:hover {
        background: linear-gradient(135deg, var(--primary-dark), var(--primary-color));
        transform: translateY(-1px);
        box-shadow: 0 6px 20px rgba(0,0,0,0.25);
      }

      .page-nav-btn:active {
        transform: translateY(0);
      }

      #prevPageBtn {
        background: linear-gradient(135deg, #2196f3, #42a5f5);
      }

      #nextPageBtn {
        background: linear-gradient(135deg, #ff9800, #ffb74d);
      }

      #prevPageBtn:hover {
        background: linear-gradient(135deg, #1976d2, #2196f3);
      }

      #nextPageBtn:hover {
        background: linear-gradient(135deg, #f57c00, #ff9800);
      }

      #prevPageBtn:disabled,
      #nextPageBtn:disabled {
        background: var(--bg-secondary);
        color: var(--text-secondary);
        cursor: not-allowed;
        opacity: 0.6;
      }

      #prevPageBtn:disabled:hover,
      #nextPageBtn:disabled:hover {
        transform: none;
        background: var(--bg-secondary);
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
      }

      /* 重新定义翻页按钮完整样式 */
      .page-nav-btn {
        padding: 8px 12px;
        border-radius: 20px;
        background: linear-gradient(135deg, var(--primary-color), var(--primary-light));
        color: white;
        border: none;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 14px;
        font-weight: 600;
        transition: all 0.3s ease;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        min-width: 60px;
        height: 40px;
      }

      .page-nav-btn:hover {
        background: linear-gradient(135deg, var(--primary-dark), var(--primary-color));
        transform: translateY(-1px);
        box-shadow: 0 6px 20px rgba(0,0,0,0.25);
      }

      .page-nav-btn:active {
        transform: translateY(0);
      }

      /* 导航控制按钮样式 */
      .nav-control-btn {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        border: none;
        cursor: pointer;
        font-size: 18px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        color: white;
        font-weight: 600;
      }

      .nav-control-btn.home-btn {
        background: linear-gradient(135deg, #4caf50, #66bb6a);
      }

      .nav-control-btn.toc-btn {
        background: linear-gradient(135deg, #ff9800, #ffb74d);
      }

      .nav-control-btn:hover {
        transform: translateY(-2px) scale(1.05);
        box-shadow: 0 6px 20px rgba(0,0,0,0.25);
      }

      .nav-control-btn:active {
        transform: translateY(0) scale(0.95);
      }

      /* 语言切换按钮 */
      .lang-btn {
        padding: 8px 16px;
        border-radius: 20px;
        background: var(--bg-secondary);
        color: var(--text-primary);
        text-decoration: none;
        font-weight: 600;
        transition: all 0.3s ease;
        border: 1px solid var(--border-color);
      }

      .lang-btn:hover {
        background: var(--primary-color);
        color: white;
        transform: translateY(-1px);
      }

      /* 阅读进度条 */
      .reading-progress {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: var(--bg-secondary);
        z-index: 1200;
      }

      .reading-progress-bar {
        height: 100%;
        background: linear-gradient(90deg, var(--primary-color), var(--primary-light));
        width: 0%;
        transition: width 0.3s ease;
      }

      /* 侧边栏 */
      .sidebar {
        position: fixed;
        top: 48px;
        left: -320px;
        width: 320px;
        height: calc(100vh - 48px);
        background: var(--card-bg);
        border-right: 1px solid var(--border-color);
        overflow-y: auto;
        transition: left 0.3s ease;
        z-index: 1000;
        box-shadow: 4px 0 20px rgba(0,0,0,0.15);
      }

      .sidebar.open {
        left: 0;
      }

      .sidebar-header {
        padding: 24px 20px;
        border-bottom: 2px solid var(--border-color);
        background: linear-gradient(135deg, var(--primary-color), var(--primary-light));
        position: relative;
      }

      .sidebar-header::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        height: 1px;
        background: rgba(255,255,255,0.2);
      }

      .sidebar-header h2 {
        margin: 0;
        color: white;
        font-size: 1.3rem;
        font-weight: 700;
        text-shadow: 0 1px 2px rgba(0,0,0,0.2);
      }

      .sidebar-nav {
        padding: 16px 0;
      }

      .nav-group {
        margin-bottom: 8px;
      }

      .nav-group-title {
        padding: 12px 20px 8px;
        font-size: 0.85rem;
        font-weight: 600;
        color: var(--text-secondary);
        text-transform: uppercase;
        letter-spacing: 0.5px;
        border-bottom: 1px solid var(--border-color);
        margin-bottom: 8px;
      }

      .nav-item {
        display: flex;
        align-items: center;
        padding: 14px 20px;
        color: var(--text-primary);
        text-decoration: none;
        transition: all 0.3s ease;
        border-left: 4px solid transparent;
        margin: 2px 0;
        position: relative;
      }

      .nav-item:hover {
        background: var(--bg-secondary);
        border-left-color: var(--primary-color);
        color: var(--primary-color);
        transform: translateX(4px);
      }

      .nav-item.active {
        background: linear-gradient(135deg, var(--primary-color), var(--primary-light));
        color: white;
        border-left-color: var(--primary-dark);
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
      }

      .nav-item.active::after {
        content: '';
        position: absolute;
        right: 16px;
        width: 8px;
        height: 8px;
        background: white;
        border-radius: 50%;
        box-shadow: 0 0 0 2px rgba(255,255,255,0.3);
      }

      .chapter-number {
        margin-right: 14px;
        font-size: 1.2rem;
        min-width: 28px;
        text-align: center;
      }

      .chapter-title {
        font-size: 0.95rem;
        line-height: 1.5;
        font-weight: 500;
      }

      /* 侧边栏滚动条美化 */
      .sidebar::-webkit-scrollbar {
        width: 6px;
      }

      .sidebar::-webkit-scrollbar-track {
        background: var(--bg-secondary);
      }

      .sidebar::-webkit-scrollbar-thumb {
        background: var(--primary-color);
        border-radius: 3px;
      }

      .sidebar::-webkit-scrollbar-thumb:hover {
        background: var(--primary-dark);
      }

      /* 主内容区 */
      .main-content {
        margin-top: 48px;
        padding: 0 20px 20px 20px;
        min-height: calc(100vh - 48px);
      }



      /* 章节导航 */
      .chapter-nav {
        position: fixed;
        bottom: 20px;
        left: 50%;
        transform: translateX(-50%);
        display: flex;
        gap: 16px;
        z-index: 900;
      }

      .chapter-btn {
        display: flex;
        align-items: center;
          gap: 8px;
        padding: 12px 20px;
        border-radius: 25px;
        background: var(--primary-color);
        color: white;
        border: none;
        cursor: pointer;
        font-weight: 600;
        transition: all 0.3s ease;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
      }

      .chapter-btn:hover:not(:disabled) {
        background: var(--primary-dark);
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(0,0,0,0.2);
      }

      .chapter-btn:disabled {
        background: var(--bg-secondary);
        color: var(--text-secondary);
        cursor: not-allowed;
        opacity: 0.6;
      }

      .chapter-icon {
        font-size: 1.1rem;
      }

      .chapter-text {
        font-size: 0.9rem;
      }

      /* 回到顶部按钮 */
      .back-to-top {
        position: fixed;
        bottom: 20px;
        right: 20px;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background: var(--primary-color);
        color: white;
        border: none;
        cursor: pointer;
        font-size: 1.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        z-index: 900;
      }

      .back-to-top:hover {
        background: var(--primary-dark);
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(0,0,0,0.2);
      }

      /* 专注阅读模式 */
      .focus-mode .top-nav {
        background: var(--bg-overlay);
        backdrop-filter: blur(10px);
        border: none;
        box-shadow: 0 2px 20px rgba(0,0,0,0.1);
      }

      .focus-mode .top-nav .nav-left {
        visibility: hidden;
      }

      .focus-mode .top-nav .nav-right {
        display: flex;
        gap: 12px;
      }

      .focus-mode .top-nav .page-nav-btn {
        display: flex;
      }

      .focus-mode .top-nav .reading-btn {
        display: flex;
      }

      .focus-mode .top-nav .theme-toggle {
        display: flex;
      }

      .focus-mode .top-nav .font-btn {
        display: flex;
      }

      .focus-mode .top-nav .lang-btn {
        display: flex;
      }

      .focus-mode .sidebar {
        display: none;
      }

      .focus-mode .main-content {
        margin-left: 0;
        max-width: 800px;
        margin: 48px auto 0;
        padding: 40px;
        background: var(--card-bg);
        border-radius: 15px;
        box-shadow: var(--shadow);
      }

      .focus-mode .left-nav,
      .focus-mode .chapter-nav {
        display: none;
      }

      .focus-mode .back-to-top {
        display: flex;
      }

      .focus-mode .reading-progress {
        display: block;
      }

      /* 响应式设计 */
      @media (max-width: 768px) {
        .top-nav {
          padding: 0 12px;
        }

        .nav-left, .nav-right {
          gap: 8px;
        }

        .sidebar-toggle,
        .reading-btn,
        .theme-toggle,
        .font-btn {
        width: 40px;
        height: 40px;
          font-size: 16px;
        }

        .page-nav-btn {
          padding: 6px 10px;
          font-size: 12px;
          min-width: 50px;
          height: 40px;
        }

        .lang-btn {
          padding: 6px 12px;
          font-size: 0.9rem;
        }

        .sidebar {
          width: 300px;
          left: -300px;
        }



        .chapter-nav {
          bottom: 10px;
        }

        .chapter-btn {
          padding: 10px 16px;
        }

        .chapter-text {
          display: none;
        }

        .back-to-top {
          bottom: 10px;
          right: 10px;
          width: 45px;
          height: 45px;
          font-size: 1.3rem;
        }

        .focus-mode .main-content {
          padding: 20px;
          margin: 56px 10px 0;
        }
      }

      @media (max-width: 480px) {
        .top-nav {
          height: 48px;
        }

        .main-content {
          margin-top: 48px;
        }

        .sidebar {
          top: 48px;
          height: calc(100vh - 48px);
        }

        .focus-mode .main-content {
          margin-top: 48px;
        }
      }
    </style>

    <script>
      // 全局状态管理
      const state = {
        theme: localStorage.getItem('theme') || 'light',
        fontSize: parseInt(localStorage.getItem('fontSize') || '16', 10),
        focusMode: localStorage.getItem('focusMode') === 'true',
        currentBook: '${currentBook}',
        currentChapter: '${currentChapter}'
      };

      // 初始化
      document.addEventListener('DOMContentLoaded', function() {
        initializeTheme();
        initializeFontSize();
        initializeFocusMode();
        initializeSidebar();
        initializeNavigation();
        initializeBackToTop();
        initializeReadingProgress();
        setupKeyboardShortcuts();
      });

      // 主题管理
      function initializeTheme() {
      const themeToggle = document.getElementById('themeToggle');
      const themeIcon = themeToggle?.querySelector('.theme-icon');
      
        document.documentElement.setAttribute('data-theme', state.theme);
        if (themeIcon) {
          themeIcon.textContent = state.theme === 'dark' ? '☀️' : '🌙';
        }
        
        themeToggle?.addEventListener('click', () => {
          state.theme = state.theme === 'dark' ? 'light' : 'dark';
          document.documentElement.setAttribute('data-theme', state.theme);
          localStorage.setItem('theme', state.theme);
          
      if (themeIcon) {
            themeIcon.textContent = state.theme === 'dark' ? '☀️' : '🌙';
          }
        });
      }

      // 字体大小管理
      function initializeFontSize() {
        const decreaseFont = document.getElementById('decreaseFont');
        const increaseFont = document.getElementById('increaseFont');
        
        document.body.style.fontSize = state.fontSize + 'px';
        
        decreaseFont?.addEventListener('click', () => {
          if (state.fontSize > 12) {
            state.fontSize -= 2;
            document.body.style.fontSize = state.fontSize + 'px';
            localStorage.setItem('fontSize', state.fontSize.toString());
          }
        });
        
        increaseFont?.addEventListener('click', () => {
          if (state.fontSize < 24) {
            state.fontSize += 2;
            document.body.style.fontSize = state.fontSize + 'px';
            localStorage.setItem('fontSize', state.fontSize.toString());
          }
        });
      }
      
      // 专注阅读模式
      function initializeFocusMode() {
        const readingModeBtn = document.getElementById('toggleReadingMode');
        
        // 初始化时设置正确的图标和状态
        if (state.focusMode) {
          document.body.classList.add('focus-mode');
          if (readingModeBtn) {
            readingModeBtn.textContent = '📚';
            readingModeBtn.title = '退出专注模式';
          }
          showReadingProgress();
        } else {
          document.body.classList.remove('focus-mode');
          if (readingModeBtn) {
            readingModeBtn.textContent = '📖';
            readingModeBtn.title = '专注阅读模式';
          }
          hideReadingProgress();
        }
        
        // 添加点击事件监听器
        readingModeBtn?.addEventListener('click', () => {
          document.body.classList.toggle('focus-mode');
          state.focusMode = document.body.classList.contains('focus-mode');
          
          if (readingModeBtn) {
            readingModeBtn.textContent = state.focusMode ? '📚' : '📖';
            readingModeBtn.title = state.focusMode ? '退出专注模式' : '专注阅读模式';
          }
          
          localStorage.setItem('focusMode', state.focusMode.toString());
          
          if (state.focusMode) {
            showReadingProgress();
          } else {
            hideReadingProgress();
          }
        });
      }

      // 侧边栏管理
      function initializeSidebar() {
      const sidebarToggle = document.getElementById('sidebarToggle');
      const sidebar = document.getElementById('sidebar');
      
      sidebarToggle?.addEventListener('click', () => {
        sidebar?.classList.toggle('open');
      });
      
        // 点击外部关闭侧边栏
      document.addEventListener('click', (e) => {
        const target = e.target as Node;
        if (sidebar && sidebarToggle && target &&
            !sidebar.contains(target) && 
            !sidebarToggle.contains(target)) {
          sidebar.classList.remove('open');
          }
        });
        
        // 生成侧边栏内容
        generateSidebarContent();
      }

      // 生成侧边栏内容
      function generateSidebarContent() {
        const sidebarTitle = document.getElementById('sidebarTitle');
        const sidebarNav = document.getElementById('sidebarNav');
        
        if (!sidebarTitle || !sidebarNav) return;
        
        // 根据当前页面路径判断当前册子
        const currentPath = window.location.pathname;
        let currentBook = 'home'; // 默认首页
        
        if (currentPath === '/' || currentPath === '/index.html') {
          currentBook = 'home';
        } else if (currentPath.startsWith('/000_') || currentPath.startsWith('/001_') || 
            currentPath.startsWith('/002_') || currentPath.startsWith('/003_') || 
            currentPath.startsWith('/004_') || currentPath.startsWith('/005_') || 
            currentPath.startsWith('/006_') || currentPath.startsWith('/007_') || 
            currentPath.startsWith('/008_') || currentPath.startsWith('/009_') || 
            currentPath.startsWith('/010_') || currentPath.startsWith('/011_')) {
          currentBook = 'theory';
        } else if (currentPath.includes('/macro')) {
          currentBook = 'macro';
        } else if (currentPath.includes('/stocks')) {
          currentBook = 'stocks';
        } else if (currentPath.includes('/technical')) {
          currentBook = 'technical';
        } else if (currentPath.includes('/quantitative')) {
          currentBook = 'quantitative';
        }
        
        const bookConfigs = {
          home: {
            title: '📚 美股投资实操手册',
            chapters: [
              { number: '📖', title: '美股投资实操手册I', url: '/001_Chapter1_Know_Yourself_and_the_World_CN' },
              { number: '🌍', title: '美股投资实操手册II', url: '/handbook/macro' },
              { number: '🔍', title: '美股投资实操手册III', url: '/handbook/stocks' },
              { number: '📊', title: '美股投资实操手册IV', url: '/handbook/technical' },
              { number: '⚡', title: '美股投资实操手册V', url: '/handbook/quantitative' }
            ]
          },
          theory: {
            title: '📖 美股投资实操手册I',
            chapters: [
              { number: '📖', title: '序言', url: '/000_Preface_CN' },
              { number: '1️⃣', title: '第一章：投资认知起点', url: '/001_Chapter1_Know_Yourself_and_the_World_CN' },
              { number: '2️⃣', title: '第二章：投资心理与风险管理', url: '/002_Chapter2_Investment_Psychology_and_Risk_Management_CN' },
              { number: '3️⃣', title: '第三章：历史规律与高倍股研究', url: '/003_Chapter3_Historical_Patterns_and_Multibagger_Stocks_CN' },
              { number: '4️⃣', title: '第四章：赛道选择与行业趋势', url: '/004_Chapter4_Track_Selection_and_Industry_Trends_CN' },
              { number: '5️⃣', title: '第五章：股票筛选策略', url: '/005_Chapter5_Stock_Screening_Strategies_CN' },
              { number: '6️⃣', title: '第六章：交易策略与执行', url: '/006_Chapter6_Trading_Strategies_and_Execution_CN' },
              { number: '7️⃣', title: '第七章：投资决策工具与资源', url: '/007_Chapter7_Investment_Decision_Tools_and_Resources_CN' },
              { number: '8️⃣', title: '第八章：案例复盘与策略改进', url: '/008_Chapter8_Case_Review_and_Strategy_Improvement_CN' },
              { number: '9️⃣', title: '第九章：构建投资体系', url: '/009_Chapter9_Building_an_Investment_System_CN' },
              { number: '🔟', title: '第十章：交易执行与实战指南', url: '/010_Chapter10_Trading_Execution_and_Practical_Guide_CN' },
              { number: '📋', title: '附录', url: '/011_Appendix_CN' }
            ]
          },
          macro: {
            title: '🌍 美股投资实操手册II',
            chapters: [
              { number: '📖', title: '宏观经济分析', url: '/handbook/macro' }
            ]
          },
          stocks: {
            title: '🔍 美股投资实操手册III',
            chapters: [
              { number: '📖', title: '个股分析', url: '/handbook/stocks' }
            ]
          },
          technical: {
            title: '📊 美股投资实操手册IV',
            chapters: [
              { number: '📖', title: '技术分析', url: '/handbook/technical' }
            ]
          },
          quantitative: {
            title: '⚡ 美股投资实操手册V',
            chapters: [
              { number: '📖', title: '量化分析', url: '/handbook/quantitative' }
            ]
          }
        };
        
        const selectedBook = bookConfigs[currentBook] || bookConfigs.home;
        sidebarTitle.textContent = selectedBook.title;
        
        // 生成导航链接
        const navHtml = selectedBook.chapters.map(chapter => `
          <a href="${chapter.url}" class="nav-item ${chapter.url === window.location.pathname ? 'active' : ''}">
            <span class="chapter-number">${chapter.number}</span>
            <span class="chapter-title">${chapter.title}</span>
          </a>
        `).join('');
        
        sidebarNav.innerHTML = navHtml;
      }

      // 导航管理
      function initializeNavigation() {
        const homeBtn = document.getElementById('homeBtn');
        const tocBtn = document.getElementById('tocBtn');
        const prevChapter = document.getElementById('prevChapter');
        const nextChapter = document.getElementById('nextChapter');
        const prevPageBtn = document.getElementById('prevPageBtn');
        const nextPageBtn = document.getElementById('nextPageBtn');
        
        // 返回首页按钮
        homeBtn?.addEventListener('click', () => {
          window.location.href = '/';
        });
        
        // 智能返回目录按钮
        tocBtn?.addEventListener('click', (e) => {
          e.preventDefault();
          const tocUrl = getSmartTocUrl();
          if (tocUrl) {
            window.location.href = tocUrl;
          }
        });
        
        // 顶部导航栏翻页按钮
        prevPageBtn?.addEventListener('click', () => {
          navigateToPrevPage();
        });
        
        nextPageBtn?.addEventListener('click', () => {
          navigateToNextPage();
        });
        
        // 初始化翻页按钮状态
        updateNavigationButtons();
        
        // 章节导航
        if (state.currentBook === 'theory' && state.currentChapter) {
          const chapterNav = document.getElementById('chapterNav');
          if (chapterNav) {
            chapterNav.style.display = 'flex';
            setupChapterNavigation();
          }
        }
      }

      // 智能获取目录URL - 根据当前页面层级返回上一级导航页
      function getSmartTocUrl() {
        const currentPath = window.location.pathname;
        
        // 如果在首页，返回首页
        if (currentPath === '/') {
          return '/';
        }
        
        // 如果在子节页面，返回章节导航页
        if (currentPath.includes('/001_Chapter1/')) {
          return '/001_Chapter1_Know_Yourself_and_the_World_CN';
        }
        if (currentPath.includes('/002_Chapter2/')) {
          return '/002_Chapter2_Investment_Psychology_and_Risk_Management_CN';
        }
        if (currentPath.includes('/003_Chapter3/')) {
          return '/003_Chapter3_Historical_Patterns_and_Multibagger_Stocks_CN';
        }
        if (currentPath.includes('/004_Chapter4/')) {
          return '/004_Chapter4_Track_Selection_and_Industry_Trends_CN';
        }
        if (currentPath.includes('/005_Chapter5/')) {
          return '/005_Chapter5_Stock_Screening_Strategies_CN';
        }
        if (currentPath.includes('/006_Chapter6/')) {
          return '/006_Chapter6_Trading_Strategies_and_Execution_CN';
        }
        if (currentPath.includes('/007_Chapter7/')) {
          return '/007_Chapter7_Investment_Decision_Tools_and_Resources_CN';
        }
        if (currentPath.includes('/008_Chapter8/')) {
          return '/008_Chapter8_Case_Review_and_Strategy_Improvement_CN';
        }
        if (currentPath.includes('/009_Chapter9/')) {
          return '/009_Chapter9_Building_an_Investment_System_CN';
        }
        if (currentPath.includes('/010_Chapter10/')) {
          return '/010_Chapter10_Trading_Execution_and_Practical_Guide_CN';
        }
        if (currentPath.includes('/011_Appendix/')) {
          return '/011_Appendix_CN';
        }
        
        // 如果在章节导航页，返回手册导航页
        if (currentPath.startsWith('/001_Chapter') || 
            currentPath.startsWith('/002_Chapter') || 
            currentPath.startsWith('/003_Chapter') || 
            currentPath.startsWith('/004_Chapter') || 
            currentPath.startsWith('/005_Chapter') || 
            currentPath.startsWith('/006_Chapter') || 
            currentPath.startsWith('/007_Chapter') || 
            currentPath.startsWith('/008_Chapter') || 
            currentPath.startsWith('/009_Chapter') || 
            currentPath.startsWith('/010_Chapter') || 
            currentPath.startsWith('/011_Appendix') ||
            currentPath.startsWith('/000_Preface')) {
          return '/handbook/theory';
        }
        
        // 如果在手册导航页，返回首页
        if (currentPath.includes('/handbook/')) {
          return '/';
        }
        
        // 默认返回首页
        return '/';
      }

      // 设置章节导航
      function setupChapterNavigation() {
        const chapters = [
          '/000_Preface_CN',
          '/001_Chapter1_Know_Yourself_and_the_World_CN',
          '/002_Chapter2_Investment_Psychology_and_Risk_Management_CN',
          '/003_Chapter3_Historical_Patterns_and_Multibagger_Stocks_CN',
          '/004_Chapter4_Track_Selection_and_Industry_Trends_CN',
          '/005_Chapter5_Stock_Screening_Strategies_CN',
          '/006_Chapter6_Trading_Strategies_and_Execution_CN',
          '/007_Chapter7_Investment_Decision_Tools_and_Resources_CN',
          '/008_Chapter8_Case_Review_and_Strategy_Improvement_CN',
          '/009_Chapter9_Building_an_Investment_System_CN',
          '/010_Chapter10_Trading_Execution_and_Practical_Guide_CN',
          '/011_Appendix_CN'
        ];
        
        const currentIndex = chapters.indexOf(window.location.pathname);
        const prevChapter = document.getElementById('prevChapter') as HTMLButtonElement;
        const nextChapter = document.getElementById('nextChapter') as HTMLButtonElement;
        
        if (prevChapter) {
          prevChapter.disabled = currentIndex <= 0;
          if (currentIndex > 0) {
            prevChapter.onclick = () => window.location.href = chapters[currentIndex - 1];
          }
        }
        
        if (nextChapter) {
          nextChapter.disabled = currentIndex >= chapters.length - 1;
          if (currentIndex < chapters.length - 1) {
            nextChapter.onclick = () => window.location.href = chapters[currentIndex + 1];
          }
        }
      }

      // 完整的页面顺序 - 包括所有层级
      function getAllPages() {
        return [
          // 1. 首页
          '/',
          
          // 2. 序言
          '/000_Preface_CN',
          
          // 3. 手册I理论导航页
          '/handbook/theory',
          
          // 4. 第一章导航页
          '/001_Chapter1_Know_Yourself_and_the_World_CN',
          
          // 5-7. 第一章子节
          '/001_Chapter1/1.1_Self_Awareness_and_Investment_Wisdom_CN',
          '/001_Chapter1/1.2_Understanding_the_World_CN',
          '/001_Chapter1/1.3_From_Cognition_to_Action_CN',
          
          // 8. 第二章导航页
          '/002_Chapter2_Investment_Psychology_and_Risk_Management_CN',
          
          // 9-12. 第二章子节
          '/002_Chapter2/2.1_Personalized_Risk_Tolerance_Model_CN',
          '/002_Chapter2/2.2_Stop_Loss_and_Risk_Control_CN',
          '/002_Chapter2/2.3_Investment_Emotions_and_Decision_Traps_CN',
          '/002_Chapter2/2.4_Maintaining_Discipline_in_Volatile_Markets_CN',
          
          // 13. 第三章导航页
          '/003_Chapter3_Historical_Patterns_and_Multibagger_Stocks_CN',
          
          // 14-17. 第三章子节
          '/003_Chapter3/3.1_Definition_and_Time_Dimensions_CN',
          '/003_Chapter3/3.2_Industry_Distribution_and_Characteristics_CN',
          '/003_Chapter3/3.3_Driving_Factors_CN',
          '/003_Chapter3/3.4_Case_Studies_CN',
          
          // 18. 第四章导航页
          '/004_Chapter4_Track_Selection_and_Industry_Trends_CN',
          
          // 19-24. 第四章子节
          '/004_Chapter4/4.1_Track_Screening_Methods_CN',
          '/004_Chapter4/4.2_AI_and_Big_Data_Revolution_CN',
          '/004_Chapter4/4.3_New_Energy_and_EV_Golden_Decade_CN',
          '/004_Chapter4/4.4_Biotech_and_Precision_Medicine_CN',
          '/004_Chapter4/4.5_Semiconductor_and_Metaverse_CN',
          '/004_Chapter4/4.6_Chinese_Stocks_Opportunities_CN',
          
          // 25. 第五章导航页
          '/005_Chapter5_Stock_Screening_Strategies_CN',
          
          // 26-31. 第五章子节
          '/005_Chapter5/5.1_Stock_Screening_Methods_CN',
          '/005_Chapter5/5.2_Fundamental_Screening_Parameters_CN',
          '/005_Chapter5/5.3_Technical_Analysis_CN',
          '/005_Chapter5/5.4_Valuation_Methodology_CN',
          '/005_Chapter5/5.5_Stock_Screening_Practice_CN',
          '/005_Chapter5/5.6_Derivatives_Enhancement_CN',
          
          // 32. 第六章导航页
          '/006_Chapter6_Trading_Strategies_and_Execution_CN',
          
          // 33-38. 第六章子节
          '/006_Chapter6/6.1_Long_term_vs_Short_term_CN',
          '/006_Chapter6/6.2_Position_Management_CN',
          '/006_Chapter6/6.3_ETF_Optimization_CN',
          '/006_Chapter6/6.4_Dynamic_Adjustment_CN',
          '/006_Chapter6/6.5_Growth_Stock_Exit_CN',
          '/006_Chapter6/6.6_Strategy_Execution_CN',
          
          // 39. 第七章导航页
          '/007_Chapter7_Investment_Decision_Tools_and_Resources_CN',
          
          // 40-45. 第七章子节
          '/007_Chapter7/7.1_GuruFocus_Morningstar_CN',
          '/007_Chapter7/7.2_Technical_Analysis_Tools_CN',
          '/007_Chapter7/7.3_Data_Driven_Decision_CN',
          '/007_Chapter7/7.4_Research_News_Resources_CN',
          '/007_Chapter7/7.5_Broker_Platform_Tools_CN',
          '/007_Chapter7/7.6_ChatGPT_Integration_CN',
          
          // 46. 第八章导航页
          '/008_Chapter8_Case_Review_and_Strategy_Improvement_CN',
          
          // 47-49. 第八章子节
          '/008_Chapter8/8.1_Broadcom_Case_Study_CN',
          '/008_Chapter8/8.2_NVIDIA_Case_Study_CN',
          '/008_Chapter8/8.3_Case_Review_Methodology_CN',
          
          // 50. 第九章导航页
          '/009_Chapter9_Building_an_Investment_System_CN',
          
          // 51-53. 第九章子节
          '/009_Chapter9/9.1_Efficient_Investment_Lifestyle_CN',
          '/009_Chapter9/9.2_Strategy_Review_Optimization_CN',
          '/009_Chapter9/9.3_Personal_Investment_System_CN',
          
          // 54. 第十章导航页
          '/010_Chapter10_Trading_Execution_and_Practical_Guide_CN',
          
          // 55-57. 第十章子节
          '/010_Chapter10/10.1_Preparation_CN',
          '/010_Chapter10/10.2_Gurufocus_Screening_CN',
          '/010_Chapter10/10.3_Trading_Execution_CN',
          
          // 58. 附录导航页
          '/011_Appendix_CN',
          
          // 59-68. 附录子节
          '/011_Appendix/A.1_Financial_Indicators_and_Formulas_CN',
          '/011_Appendix/B.1_Recommended_Reading_List_CN',
          '/011_Appendix/C.1_Quantitative_Analysis_and_Backtesting_CN',
          '/011_Appendix/D.1_Trading_Plan_Templates_CN',
          '/011_Appendix/E.1_Broker_Platform_Guide_CN',
          '/011_Appendix/F.1_GuruFocus_Plus_Case_Study_CN',
          '/011_Appendix/G.1_Charlie_Munger_Wisdom_CN',
          '/011_Appendix/H.1_Intelligent_Trading_System_CN',
          '/011_Appendix/I.1_US_Stock_Investment_FAQ_CN',
          '/011_Appendix/J.1_Document_System_Construction_Guide_CN',
          
          // 69-72. 其他手册导航页
          '/handbook/macro',
          '/handbook/stocks', 
          '/handbook/technical',
          '/handbook/quantitative'
        ];
      }

      // 翻页功能
      function navigateToPrevPage() {
        const pages = getAllPages();
        const currentPath = window.location.pathname;
        const currentIndex = pages.indexOf(currentPath);
        
        if (currentIndex > 0) {
          window.location.href = pages[currentIndex - 1];
        }
      }

      function navigateToNextPage() {
        const pages = getAllPages();
        const currentPath = window.location.pathname;
        const currentIndex = pages.indexOf(currentPath);
        
        if (currentIndex >= 0 && currentIndex < pages.length - 1) {
          window.location.href = pages[currentIndex + 1];
        }
      }

      // 更新翻页按钮状态
      function updateNavigationButtons() {
        const pages = getAllPages();
        const currentPath = window.location.pathname;
        const currentIndex = pages.indexOf(currentPath);
        
        const prevBtn = document.getElementById('prevPageBtn');
        const nextBtn = document.getElementById('nextPageBtn');
        
        if (prevBtn && nextBtn) {
          // 更新按钮状态
          prevBtn.disabled = currentIndex <= 0;
          nextBtn.disabled = currentIndex >= pages.length - 1;
          
          // 更新按钮文字显示页面信息
          if (currentIndex > 0) {
            prevBtn.title = `上一页`;
          } else {
            prevBtn.title = '已是第一页';
          }
          
          if (currentIndex < pages.length - 1) {
            nextBtn.title = `下一页`;
          } else {
            nextBtn.title = '已是最后一页';
          }
        }
      }

      // 回到顶部
      function initializeBackToTop() {
      const backToTopBtn = document.getElementById('backToTop');
        
        window.addEventListener('scroll', () => {
          if (backToTopBtn) {
          if (window.scrollY > 300) {
            backToTopBtn.style.display = 'flex';
          } else {
            backToTopBtn.style.display = 'none';
            }
          }
        });
        
        backToTopBtn?.addEventListener('click', () => {
          window.scrollTo({ top: 0, behavior: 'smooth' });
        });
      }

      // 阅读进度
      function initializeReadingProgress() {
        if (state.focusMode) {
          showReadingProgress();
        }
      }

      function showReadingProgress() {
        const progress = document.getElementById('readingProgress');
        if (progress) {
          progress.style.display = 'block';
          window.addEventListener('scroll', updateReadingProgress);
        }
      }

      function hideReadingProgress() {
        const progress = document.getElementById('readingProgress');
        if (progress) {
          progress.style.display = 'none';
          window.removeEventListener('scroll', updateReadingProgress);
        }
      }
      
      function updateReadingProgress() {
        const progressBar = document.getElementById('readingProgressBar');
        if (!progressBar) return;
        
        const scrollTop = window.pageYOffset;
        const docHeight = document.documentElement.scrollHeight - window.innerHeight;
        const scrollPercent = (scrollTop / docHeight) * 100;
        
        progressBar.style.width = scrollPercent + '%';
      }

      // 键盘快捷键
      function setupKeyboardShortcuts() {
        document.addEventListener('keydown', (e) => {
          // ESC: 退出专注模式
          if (e.key === 'Escape' && state.focusMode) {
            document.getElementById('toggleReadingMode')?.click();
          }
          
          // Ctrl/Cmd + +/-: 调整字体
          if ((e.ctrlKey || e.metaKey) && e.key === '=') {
            e.preventDefault();
            document.getElementById('increaseFont')?.click();
          }
          if ((e.ctrlKey || e.metaKey) && e.key === '-') {
            e.preventDefault();
            document.getElementById('decreaseFont')?.click();
          }
          
          // Ctrl/Cmd + D: 切换主题
          if ((e.ctrlKey || e.metaKey) && e.key === 'd') {
            e.preventDefault();
            document.getElementById('themeToggle')?.click();
          }
        });
      }
    </script>
  </body>
</html> 